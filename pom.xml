<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>demo</name>
    <description>Demo project for Spring Boot</description>

    <repositories>
        <repository>
            <id>maven-ali</id>
            <url>http://maven.aliyun.com/nexus/content/groups/public//</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>fail</checksumPolicy>
            </snapshots>
        </repository>
    </repositories>

    <properties>
        <java.version>1.8</java.version>
        <junit.version>4.12</junit.version>
        <jmockit.version>1.49</jmockit.version>
        <selenium.version>3.141.59</selenium.version>
        <selenium-htmlunit.version>2.36.0</selenium-htmlunit.version>
        <pitest.version>1.4.11</pitest.version>
        <pitest-junit5.version>0.11</pitest-junit5.version>
        <jmeter-plugin.version>3.0.0</jmeter-plugin.version>
        <jmeter.version>5.2.1</jmeter.version>
        <dependency-check.version>5.2.4</dependency-check.version>

        <jmockit.path>${settings.localRepository}/org/jmockit/jmockit/${jmockit.version}/jmockit-${jmockit.version}.jar</jmockit.path>
        <jmockit.agentConfig>-javaagent:${jmockit.path}</jmockit.agentConfig>

        <jacoco.version>0.8.5</jacoco.version>
        <jacoco.path>${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar</jacoco.path>
        <jacoco.utReport>${project.build.directory}/jacoco.exec</jacoco.utReport>
        <jacoco.itReport>${project.build.directory}/jacoco-it.exec</jacoco.itReport>
        <jacoco.utAgentConfig>-javaagent:${jacoco.path}=destfile=${jacoco.utReport}</jacoco.utAgentConfig>
        <jacoco.itAgentConfig>-javaagent:${jacoco.path}=destfile=${jacoco.itReport}</jacoco.itAgentConfig>

        <sonarjava.version>5.14.0.18788</sonarjava.version>

        <compiler.version>3.8.1</compiler.version>
        <surefire.version>2.22.2</surefire.version>
        <failsafe.version>2.22.2</failsafe.version>
        <dependency.version>3.1.1</dependency.version>

        <!-- test properties -->
        <jmeter.target.host>localhost</jmeter.target.host>
        <jmeter.target.port>8083</jmeter.target.port>
        <jmeter.target.root>/</jmeter.target.root>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.wenhao</groupId>
            <artifactId>jpa-spec</artifactId>
            <version>3.2.5</version>
        </dependency>


        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework/spring-web -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>5.2.3.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.jmockit</groupId>
            <artifactId>jmockit</artifactId>
            <version>${jmockit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>htmlunit-driver</artifactId>
            <version>${selenium-htmlunit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <version>${jacoco.version}</version>
            <classifier>runtime</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.java</groupId>
            <artifactId>sonar-jacoco-listeners</artifactId>
            <version>${sonarjava.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
<!--            <scope>test</scope>-->
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <!-- ehcache -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- unit tests (with mocking and code coverage agents enabled) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <argLine>${jmockit.agentConfig} ${jacoco.utAgentConfig}</argLine>
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                    <properties>
                        <!-- add SonarQube's JaCoCo listener to enable -->
                        <!-- gathering of code coverage metrics per test -->
                        <property>
                            <name>listener</name>
                            <value>org.sonar.java.jacoco.JUnitListener</value>
                        </property>
                    </properties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.6.0.1398</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <configuration>
                    <excludes>
                        <!-- Exclude class from test coverage -->
                        <exclude>**/*com/example/demo/DemoApplication.class</exclude>
                        <!-- Exclude full package from test coverage -->
                        <exclude>**/*com/example/demo/vo/*</exclude>
                        <exclude>**/*com/example/demo/po/*</exclude>
                        <exclude>**/*com/example/demo/datasource/*</exclude>
                        <exclude>**/*com/example/demo/service/serviceinterface/*</exclude>
                    </excludes>

                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${failsafe.version}</version>
                <configuration>
                    <!-- JaCoCo must be enabled on target app container to gather coverage
                         for integration tests, e.g. UI tests and API tests -->
                    <includes>
                        <include>**/*IntegrationTest.java</include>
                    </includes>
                </configuration>
                <!-- if activated, failsafe will run automatically on integration-test and verify goals -->
                <!--<executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>-->
            </plugin>

            <!-- mutation tests (with mocking agent enabled) -->
<!--            <plugin>-->
<!--                <groupId>org.pitest</groupId>-->
<!--                <artifactId>pitest-maven</artifactId>-->
<!--                <version>${pitest.version}</version>-->
<!--                <configuration>-->
<!--                    <jvmArgs>-->
<!--                        <value>${jmockit.agentConfig}</value>-->
<!--                    </jvmArgs>-->
<!--                    <excludedTestClasses>-->
<!--                        <param>*ApplicationTests</param>-->
<!--                        <param>*IntegrationTest</param>-->
<!--                    </excludedTestClasses>-->
<!--                    <outputFormats>-->
<!--                        <outputFormat>XML</outputFormat>-->
<!--                    </outputFormats>-->
<!--                </configuration>-->
<!--                &lt;!&ndash; enable support for JUnit 5 in Pitest &ndash;&gt;-->
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>org.pitest</groupId>-->
<!--                        <artifactId>pitest-junit5-plugin</artifactId>-->
<!--                        <version>${pitest-junit5.version}</version>-->
<!--                    </dependency>-->
<!--                </dependencies>-->
                <!-- if activated, pitest will run automatically on integration-test goal -->
                <!--<executions>
                    <execution>
                        <goals>
                            <goal>mutationCoverage</goal>
                        </goals>
                    </execution>
                </executions>-->
<!--            </plugin>-->

            <!-- performance tests -->
<!--            <plugin>-->
<!--                <groupId>com.lazerycode.jmeter</groupId>-->
<!--                <artifactId>jmeter-maven-plugin</artifactId>-->
<!--                <version>${jmeter-plugin.version}</version>-->
<!--                <configuration>-->
<!--                    <testResultsTimestamp>false</testResultsTimestamp>-->
<!--                    <propertiesUser>-->
<!--                        <host>${jmeter.target.host}</host>-->
<!--                        <port>${jmeter.target.port}</port>-->
<!--                        <root>${jmeter.target.root}</root>-->
<!--                    </propertiesUser>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>configuration</id>-->
<!--                        <goals>-->
<!--                            <goal>configure</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                    &lt;!&ndash; if activated, jmeter will run automatically on integration-test and verify goals &ndash;&gt;-->
<!--                    &lt;!&ndash;<execution>-->
<!--                        <phase>integration-test</phase>-->
<!--                        <goals>-->
<!--                            <goal>configure</goal>-->
<!--                            <goal>jmeter</goal>-->
<!--                            <goal>results</goal>-->
<!--                        </goals>-->
<!--                    </execution>&ndash;&gt;-->
<!--                </executions>-->
<!--            </plugin>-->


<!--            &lt;!&ndash; dependency vulnerability tests &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.owasp</groupId>-->
<!--                <artifactId>dependency-check-maven</artifactId>-->
<!--                <version>${dependency-check.version}</version>-->
<!--                <configuration>-->
<!--                    <format>ALL</format>-->
<!--                    &lt;!&ndash;<failBuildOnCVSS>5</failBuildOnCVSS>&ndash;&gt;-->
<!--                </configuration>-->
<!--            </plugin>-->

        </plugins>
    </build>

</project>
